# üìç Prompt T√©cnico ‚Äì Roadmap Modular de ALMA-CLI v1.0.0

id: roadmap_alma_cli_v1.0.0
version: 1.0.0-draft
autor: Santi + KAEL
estado: desarrollo
estructura:
  - modulos:
      - cli_central
      - bitacora
      - changelog
      - fix_metadata
      - memorias
      - utils_comunes
      - ia_integration
      - logging_auditoria
      - config_loader
      - testing
      - documentacion
      - plugins_extensibles
linked_to:
  - alma_core/core/notebooks/alma-cli/
  - prompts/prompt_alma_cli_v0.1.0.yaml
  - docs/journal/bitacora_viva.yaml
tags: [cli, modular, auditoria, ia, changelog, metadata, bitacora, versionado, extensibilidad]

# üß© Roadmap por m√≥dulo

## cli_central
- [ ] Crear `cli.py` como entrypoint con Typer.
- [ ] Cargar subcomandos din√°micamente por m√≥dulo (`cli.add_typer`).
- [ ] Incluir `--version`, `--help`, `--config`, `--status`.
- [ ] L√≥gica de descubrimiento de plugins.

## bitacora
- [ ] Crear script CLI para agregar entradas (`add_bitacora_entry.py`).
- [ ] Soporte para logs desde otros m√≥dulos (`--log-bitacora`).
- [ ] Generar bit√°coras Markdown/YAML por fecha.
- [ ] Incluir `bitacora.md` resumida por d√≠a.

## changelog
- [ ] Agregar entradas con `add_changelog_entry.py`.
- [ ] Soporte por versi√≥n y m√≥dulo (`CHANGELOG_YYYY-MM-DD_vX.Y.Z.yaml`).
- [ ] Exportaci√≥n a `CHANGELOG.md`.
- [ ] Historial sem√°ntico con validaci√≥n por schema.

## fix_metadata
- [ ] Crear versi√≥n `v1.0.0/` limpia.
- [ ] Incluir `validate.py`, `auto_fill.py`, `hash.py`, `patch.py`.
- [ ] `bin/fix_metadata.py` con `--validate`, `--fix`, `--diff`, `--patch`, `--dry-run`.
- [ ] Schema actualizado basado en plantilla ALMA_RESIST.

## memorias
- [ ] Subcomando `memorias cargar`, `memorias sync`, `memorias export`.
- [ ] Validaci√≥n por schema y versi√≥n.
- [ ] Registro de `huella_sync` y `hash_verificacion`.
- [ ] IA: resumen de memoria, propuesta institucional.

## utils_comunes
- [ ] Parsers YAML/JSON/MD/frontmatter.
- [ ] Loaders gen√©ricos de archivos.
- [ ] Funciones de timestamp, autor, hashing.
- [ ] Librer√≠a de paths relativos centralizados.

## ia_integration
- [ ] Subcomando `ia sugerir`, `ia resumir`, `ia validar`.
- [ ] Interfaz con Mistral/local o GPT v√≠a API.
- [ ] `prompts/` por m√≥dulo.
- [ ] Output Markdown legible + YAML compatible.

## logging_auditoria
- [ ] Logger rotativo por m√≥dulo.
- [ ] Log YAML + consola (`logging_config.yaml`).
- [ ] `logs/bitacora/YYYY-MM-DD.log` por agente.
- [ ] Modo `--debug`, `--audit`, `--trace`.

## config_loader
- [ ] `settings.yaml` global.
- [ ] `.env` para secretos/API keys.
- [ ] Config din√°mico por entorno (`dev`, `prod`, `test`).

## testing
- [ ] `tests/` con `pytest` y mocks.
- [ ] Validaci√≥n de CLI por comando (`--dry-run`, `--invalid`, etc).
- [ ] CI local opcional (`test_all.sh`).

## documentacion
- [ ] `README.md` central con TOC.
- [ ] `README.md` autogenerado por m√≥dulo desde prompts.
- [ ] Exportador a Obsidian (`md + linked_to + tags`).
- [ ] Docs IA: resumen autom√°tico con `ia_docum`.

## plugins_extensibles
- [ ] `plugins/` con descubrimiento autom√°tico.
- [ ] `alma plugin install X`, `alma plugin list`.
- [ ] Plantilla `plugin_template/` para IA/usuarios.

# üîÅ Ciclos iterativos

- v1.0.0-alpha ‚Üí CLI funcional base (bitacora, changelog, metadata).
- v1.0.0-beta ‚Üí IA integrada + logging + config modular.
- v1.0.0-final ‚Üí Full auditabilidad + extensibilidad + cobertura total.

# üîê Principios
- Modularidad extrema
- Hash + huella en cada acci√≥n
- IA integrada nativamente
- Auto-documentaci√≥n activa
- Bit√°cora + changelog siempre
- Validaci√≥n antes de ejecuci√≥n
