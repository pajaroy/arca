
# üìã Checklist Completa ‚Äì Roadmap ALMA_LOADER

## ‚úÖ FASE 1 ‚Äì Core B√°sico

- [ ] Crear script `/nueva` (entrada conversacional ‚Üí JSON)
  - [ ] Procesar entrada de texto simple
  - [ ] Limpiar y normalizar input
  - [ ] Identificar comandos `/accion`
  - [ ] Generar estructura JSON v√°lida
  - [ ] Validar categor√≠a contra `schema_base.json`

- [ ] Validaci√≥n de memorias
  - [ ] Crear `schema_base.json` definitivo
  - [ ] Implementar validaci√≥n con `jsonschema`
  - [ ] Gestionar errores y feedback
  - [ ] Agregar reglas de correcci√≥n autom√°tica
  - [ ] Registrar errores en log

- [ ] Base de datos SQLite
  - [ ] Dise√±ar tabla `memorias`
  - [ ] Agregar soporte JSON1
  - [ ] Crear funci√≥n `guardar_memoria()`
  - [ ] Testear inserci√≥n y extracci√≥n
  - [ ] Agregar √≠ndice en `fecha` y `categoria`

- [ ] Resumen diario autom√°tico
  - [ ] Filtrar por `fecha_actual`
  - [ ] Contar memorias por categor√≠a
  - [ ] Detectar tags cr√≠ticos (#cr√≠tico, #pendiente)
  - [ ] Generar archivo `.md` de salida

- [ ] Acciones r√°pidas `/accion`
  - [ ] Crear diccionario de acciones comunes
  - [ ] Integrar parser para `/accion nombre`
  - [ ] Generar memoria autom√°tica con contenido predefinido


## ‚úÖ FASE 3 ‚Äì Predictivo + Gamificaci√≥n

- [ ] Sistema de puntos y niveles
  - [ ] Asignar puntos por acciones (memoria, resumen, alerta resuelta)
  - [ ] Registrar progreso en archivo o tabla
  - [ ] Mostrar nivel actual y umbral de subida

- [ ] Alertas autom√°ticas
  - [ ] Definir reglas `if-then` en `schema/reglas.json`
  - [ ] Detectar patrones peligrosos en resumen diario
  - [ ] Generar sugerencias (ej: revisar MEMHEALTH-022)

- [ ] Modelo predictivo
  - [ ] Preparar dataset con memorias hist√≥ricas
  - [ ] Entrenar regresi√≥n log√≠stica (features simples)
  - [ ] Evaluar accuracy
  - [ ] Guardar modelo en `models/demo.pkl`
  - [ ] Aplicar modelo a memorias nuevas y emitir alerta

