# üß† ALMA_LOADER ‚Äì Documentaci√≥n v3.0.2 (Base)

Este documento centraliza toda la informaci√≥n clave del sistema ALMA_LOADER. Contiene la visi√≥n estrat√©gica, las gu√≠as t√©cnicas, el historial de cambios, una gu√≠a de onboarding y un m√≥dulo de contribuci√≥n.


## üõ†Ô∏è Gu√≠a T√©cnica (Prompt)

Describe c√≥mo cada m√≥dulo opera internamente:
- Conversi√≥n de lenguaje natural a JSON estructurado
- Validaci√≥n de esquema (`schema_base.json`)
- Almacenamiento dual SQLite + FAISS
- Enrutamiento de atenci√≥n y res√∫menes automatizados
- Hooks y extensiones futuras


## üöÄ Gu√≠a de Onboarding

1. **Usuarios**: Leer secci√≥n ‚ÄúVisi√≥n General‚Äù y usar comandos sugeridos
2. **Desarrolladores / IAs**: Leer ‚ÄúGu√≠a T√©cnica‚Äù y testear funciones
3. **Colaboradores**: Ver secci√≥n ‚ÄúC√≥mo Contribuir‚Äù y el Roadmap activo


> Para contribuciones mayores, crear una nueva rama y proponer PR con documentaci√≥n m√≠nima.

> Este documento se ir√° completando en cada fase de la versi√≥n 3.0.2

## üåç Documentaci√≥n Web (Futuro)

ALMA_LOADER est√° dise√±ado para poder convertirse en una documentaci√≥n web navegable.

Se recomienda utilizar:

- [`mkdocs`](https://www.mkdocs.org/) ‚Üí para generar sitios est√°ticos a partir de archivos Markdown. Ideal para este tipo de documentaci√≥n t√©cnica modular.
- [`Sphinx`](https://www.sphinx-doc.org/) ‚Üí si se desea integrar documentaci√≥n Python con autodocumentaci√≥n de c√≥digo fuente.

### üìÅ Estructura sugerida para `mkdocs`

```
/docs/
‚îú‚îÄ‚îÄ index.md  ‚Üê Presentaci√≥n general
‚îú‚îÄ‚îÄ whitepaper.md
‚îú‚îÄ‚îÄ prompt_tecnico.md
‚îú‚îÄ‚îÄ api.md
‚îú‚îÄ‚îÄ roadmap.md
‚îî‚îÄ‚îÄ contribucion.md
```

> Esta integraci√≥n puede incluir navegaci√≥n por temas, b√∫squeda sem√°ntica y despliegue autom√°tico en GitHub Pages o Netlify.