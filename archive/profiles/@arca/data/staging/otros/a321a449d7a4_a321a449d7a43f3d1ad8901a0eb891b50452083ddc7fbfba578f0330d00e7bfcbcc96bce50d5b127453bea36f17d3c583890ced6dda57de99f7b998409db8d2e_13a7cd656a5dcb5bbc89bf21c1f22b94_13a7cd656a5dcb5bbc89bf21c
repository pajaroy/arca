
from fastapi.testclient import TestClient
from main import app

client = TestClient(app)

memoria_valida = {
    "id": "test-mem-001",
    "contenido": "Prueba de contenido",
    "categoria": "test",
    "tags": ["#test"],
    "visibilidad": "privada",
    "owner_id": "dev-user-001"  # Coincide con el mock de autenticación
}

def test_post_memoria_ok():
    response = client.post("/v1/memorias", json=memoria_valida)
    assert response.status_code == 200
    assert response.json()["resultado"] == "ok"
    assert "estado" in response.json()

def test_post_memoria_missing_field():
    # Test de validación de esquema con Pydantic
    memoria_incompleta = memoria_valida.copy()
    del memoria_incompleta["contenido"]
    response = client.post("/v1/memorias", json=memoria_incompleta)
    assert response.status_code == 422
    assert "detail" in response.json()

def test_post_memoria_owner_mismatch():
    # Test de autorización (requiere implementar lógica en el endpoint)
    memoria_falsa = memoria_valida.copy()
    memoria_falsa["owner_id"] = "otro-user"
    
    response = client.post("/v1/memorias", json=memoria_falsa)
    
    # El endpoint actual no valida owner_id vs usuario autenticado
    # Este test fallará hasta implementar la validación
    assert response.status_code == 403
    assert "no autorizado" in response.json().get("detail", "").lower()
