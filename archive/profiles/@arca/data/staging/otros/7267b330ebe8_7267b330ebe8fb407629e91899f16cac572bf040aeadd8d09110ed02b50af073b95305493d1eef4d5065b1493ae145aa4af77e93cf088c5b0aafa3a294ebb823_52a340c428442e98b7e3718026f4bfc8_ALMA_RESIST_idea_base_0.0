
# ALMA_RESIST ‚Äì Idea Base v0.0.2

## üß† Resumen Ejecutivo

**ALMA_RESIST** es un entorno de trabajo port√°til, aut√≥nomo y offline, impulsado por IA local, pensado para operar desde m√∫ltiples nodos (PC madre, disco port√°til y pendrive de arranque). Integra un servidor LLM, un cliente de terminal inteligente, un sistema de memoria estructurada (ALMA_LOADER) y capacidades de autonom√≠a limitada. Est√° dise√±ado para funcionar sin conexi√≥n a internet, adaptarse a distintos entornos de hardware y garantizar privacidad y resiliencia.


## ‚öôÔ∏è Componentes Principales

### ALMA_SERVER_LLM

- **Motor base:** `text-generation-webui` con Mistral-7B-Instruct.
- **Alternativas consideradas:** `llama.cpp`, `vLLM`, `llama-cpp-python`.
- **Comparativa:** `text-generation-webui` soporta m√∫ltiples backends y frontend opcional; `llama.cpp` es m√°s liviano, ideal para CPU.
- **Gesti√≥n de versiones:** `config/llm_model.json` + script `update_model.sh` para migraciones entre modelos.

### Terminal CLI Inteligente

- Conexi√≥n v√≠a HTTP al LLM local.
- Manejo de errores: timeout, fallback local, log de errores (`logs/errors.md`).
- Encriptaci√≥n opcional de logs de sesi√≥n (`logs/secure_chat_log.md` con GPG).

### ALMA_LOADER

- Proceso ETL con prompts como:
  ```txt
  Resume el siguiente texto en JSON con campos: fecha, tema, resumen, etiquetas, estado_emocional.
  ```
- Backup autom√°tico diario con script cron a `backups/memoria_YYYYMMDD.sqlite`.

### Autonom√≠a Limitada

- Acciones de bajo riesgo: mover archivos temporales, ordenar carpetas.
- Acciones prohibidas: eliminaci√≥n, escritura en `system/`, alteraci√≥n de modelos sin autorizaci√≥n.
- Auditor√≠a en: `logs/autonomia_audit.md`


## üîÑ Flujo de Datos

- Entrada usuario ‚Üí CLI ‚Üí Servidor LLM ‚Üí Respuesta ‚Üí Log
- Log ‚Üí ALMA_LOADER ‚Üí Memoria estructurada ‚Üí Backup + an√°lisis
- Autonom√≠a ‚Üí Sugerencias ‚Üí CLI ‚Üí Acci√≥n autorizada
- Diagrama Mermaid.js pendiente.


## üìê Est√°ndares T√©cnicos

- Sandboxing de procesos con Firejail.
- Control de versiones con Git (offline):
  - `main`: versi√≥n estable.
  - `dev`: experimental.
- Formatos: Markdown (`.md`), JSON, SQLite.
- Carpeta `docs/` dividida por m√≥dulos (`llm.md`, `cli.md`, etc.)


# üìã Changelog v0.0.2 (Respecto a v0.0.1)

- **Nuevo:** Se agreg√≥ resumen ejecutivo y glosario sugerido.
- **Reescrito:** Arquitectura separada en f√≠sica y l√≥gica.
- **A√±adido:** Comparativa t√©cnica entre motores LLM.
- **Seguridad:** Logs encriptables con GPG, pol√≠tica de permisos definida.
- **Memoria:** ETL documentado, backups autom√°ticos con cron.
- **Autonom√≠a:** Auditor√≠a, definici√≥n de riesgos y l√≠mites.
- **T√©cnico:** Inclusi√≥n de Firejail, estructura Git, separaci√≥n modular de docs.
