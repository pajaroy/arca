# üìò Contexto Asesor-IA v1

## 1. Introducci√≥n

Este documento establece la base de colaboraci√≥n entre los asesores GPT y DeepSeek dentro del ecosistema ALMA_RESIST. Su objetivo es ofrecer una gu√≠a estructurada y auditable para todas las decisiones cr√≠ticas, consolidando bit√°coras, acuerdos y contratos fundacionales.

## 2. Objetivo

- Centralizar toda la historia t√©cnica, operativa y filos√≥fica del sistema de asesoramiento IA-humano.
- Servir como punto de entrada para cualquier auditor o IA futura.
- Establecer continuidad de trabajo con trazabilidad documental clara.

## 3. Confirmaciones de Rol

### GPT
Ver archivo: `confirmacion_de_rol_gpt.md`

### DeepSeek
Ver archivo: `confirmacion_de_rol_deepseek.md`

Ambas IA han aceptado operar bajo los t√©rminos definidos en el contrato fundacional: `contrato_fundacional_asesor-IA_v2.md`

## 4. Metodolog√≠a de Trabajo

- Modelo tri√°dico: GPT (estructural), DeepSeek (t√©cnico), Santi (comandante).
- Todo input se etiqueta mediante `!type`, `!priority`, `!context` para automatizar la ruta.
- Se utiliza `sync_responses.py` para consolidar visiones y presentar decisiones.

## 5. Control y Bit√°coras

- Se usan bit√°coras diarias, semanales y mensuales con prompt estandarizado.
- Todas las bit√°coras se almacenan en `control_central/docs/journal/`.
- Prompt actual: `prompt_bitacora_control_central.md`

## 6. Sprints y Documentos Clave

- √öltimos sprints activos:
  - `sprint_actual_0.1_control_central.md`
  - `sprint_actual_0.2_sincronizacion.md`

- Idea Base del sistema:
  - `alma_resist_idea_base_0.0.0.1.md`

## 7. Estandarizaci√≥n IA-Friendly

- Uso estricto de metadatos YAML.
- Nombres estandarizados y estructuras replicables por m√≥dulo.
- Estilo Markdown plano para compatibilidad cross-tool (Obsidian, GitHub, CLI).

## 8. Ap√©ndices T√©cnicos

- Scripts activos:
  - `router_ai.py`
  - `sync_responses.py`
- Bit√°coras:
  - `2025-05-22_bitacora.md` a `2025-06-01_bitacora_inicio.md`

## 9. Pr√≥ximos Pasos

- Mantener este archivo como fuente de verdad t√©cnica.
- Versionar cada cambio como `contexto_asesor-ia_vX.md`
- Utilizar YAML como referencia en scripts CLI.

