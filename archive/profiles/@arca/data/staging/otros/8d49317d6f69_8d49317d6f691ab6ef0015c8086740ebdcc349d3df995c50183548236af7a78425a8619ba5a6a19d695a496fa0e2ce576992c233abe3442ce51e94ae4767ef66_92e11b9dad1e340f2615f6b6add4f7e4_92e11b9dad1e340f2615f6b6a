---
tipo: script
id: SCRIPT_2025-06-05_e7be28
version: '1.0'
formato: py
modulo: ALMA_RESIST
titulo: Test Cli
autor: bird
fecha_creacion: '2025-06-05'
status: activo
version_sistema: Centralesis v2.3
origen: automatico
tags: []
linked_to: []
descripcion: Documento procesado autom√°ticamente
fecha_actualizacion: '2025-06-05'
hash_integridad: sha256:fb7f752082224844e8d92f2b2e0cd025a661a2940600b0208bbdd2755bee4239
---
import unittest
from unittest.mock import patch
from io import StringIO
from core.cli import AlmaCLI

class TestCLI(unittest.TestCase):
    def test_ayuda_lista_comandos(self):
        cli = AlmaCLI()
        with patch('sys.stdout', new=StringIO()) as fake_out:
            cli.onecmd("!ayuda")
            output = fake_out.getvalue().strip()
            self.assertIn("Comandos disponibles:", output)
            self.assertIn("!ayuda", output)
            self.assertIn("!salir", output)

    def test_salir_finaliza_sesion(self):
        cli = AlmaCLI()
        self.assertTrue(cli.onecmd("!salir"))

    def test_comando_invalido_muestra_error(self):
        cli = AlmaCLI()
        with patch('sys.stdout', new=StringIO()) as fake_out:
            cli.onecmd("!invalido")
            output = fake_out.getvalue().strip()
            self.assertIn("Error: Comando no reconocido", output)

if __name__ == '__main__':
    unittest.main()
