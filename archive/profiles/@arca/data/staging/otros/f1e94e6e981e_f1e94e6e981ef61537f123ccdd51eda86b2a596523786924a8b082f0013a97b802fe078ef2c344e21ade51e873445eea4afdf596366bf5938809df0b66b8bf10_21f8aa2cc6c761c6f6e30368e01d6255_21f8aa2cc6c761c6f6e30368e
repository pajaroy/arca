# ğŸ§  Prompt Maestro ALMA_LOADER v2.2.0

## ğŸŒŸ PropÃ³sito General

ALMA_LOADER v2.2.0 es un sistema de memoria modular e inteligente que transforma experiencias personales (especialmente de trading, productividad y reflexiÃ³n) en datos estructurados, accionables y escalables. Esta versiÃ³n consolida el Core conversacional y aÃ±ade una capa de **abstracciÃ³n de almacenamiento** y **preparaciÃ³n vectorial**, sentando las bases para inteligencia semÃ¡ntica futura.


## ğŸ§¹ AbstracciÃ³n de Almacenamiento

```python
class BaseStorage(ABC):
    def guardar_memoria(self, memoria: dict): ...
    def buscar_memoria(self, query: str): ...
    def actualizar_memoria(self, memoria_id: str, nueva_data: dict): ...
    def eliminar_memoria(self, memoria_id: str): ...
```

**Implementaciones:**

- `SQLiteStorage`: VersiÃ³n actual optimizada con JSON1 y filtros rÃ¡pidos.
    
- `VectorStorage (FAISS)`: Preparada para bÃºsquedas semÃ¡nticas en embeddings (no implementada).
    


## ğŸ§  Sistema de AtenciÃ³n y Enrutamiento (Experimental)

MÃ³dulo: `router_atencional.py`

**Idea Base**:

- Analiza el input y lo enruta segÃºn contexto.
    
- Ej: Si detecta estructura de acciÃ³n â†’ `acciones.py`, si detecta reflexiÃ³n â†’ `resumenes.py`, si detecta memoria â†’ `guardar_memoria()`.
    

```python
def enrutar(texto_usuario: str):
    if texto_usuario.startswith("/accion"):
        return procesar_accion(texto_usuario)
    elif "hoy" in texto_usuario.lower():
        return guardar_memoria(texto_usuario)
    ...
```


## ğŸš¦ CÃ³mo usar este Prompt (Modelos GPT / Terminal / DeepSeek)

- Este prompt asume la existencia de mÃ³dulos Python compatibles con la interfaz descrita.
    
- Si se usa desde GPT, se debe respetar el formato de entrada/salida estandarizado en JSON.
    
- Si se usa desde terminal o DeepSeek, se recomienda seguir la ruta `input â†’ router â†’ validador â†’ almacenamiento`.
    


## ğŸ“š Referencias TÃ©cnicas

- `Presentacion_ALMA_LOADER_v2.1.1.md`
    
- `Seguimiento_2.1.1.md`
    
- `schema_base.json`
    
- `roadmap_fase_2.md`
    

