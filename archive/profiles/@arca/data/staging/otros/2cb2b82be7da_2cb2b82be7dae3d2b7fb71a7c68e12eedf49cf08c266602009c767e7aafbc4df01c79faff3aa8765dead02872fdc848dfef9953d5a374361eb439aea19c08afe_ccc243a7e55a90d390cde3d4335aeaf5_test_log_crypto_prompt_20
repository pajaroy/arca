---
module: prompts/test_log_crypto_prompt
type: core
status: in_progress
created: '2025-05-26'
linked_to:
- metodologia_doc_ia_v2.md

---
# ‚úÖ Solicitud de Test ‚Äì `test_log_crypto.py` ‚Äì ALMA_RESIST Sprint 2.6

Este test debe cubrir el m√≥dulo `log_crypto.py`, el cual implementa cifrado y descifrado de archivos de log usando algoritmos AES-GCM y ChaCha20-Poly1305, con generaci√≥n segura de claves y validaci√≥n de integridad.

---

## üìò M√©todos clave a testear

- `encrypt_log(input_path: str, output_path: str, key: bytes) -> bytes`
- `decrypt_log(input_path: str, output_path: str, key: bytes) -> None`
- `generar_clave(password: bytes, salt: bytes) -> bytes`
- `validar_log_cifrado(file_path: str) -> bool`

---

## üß™ Casos de prueba sugeridos

| Caso                                            | Resultado esperado                                |
|-------------------------------------------------|---------------------------------------------------|
| Cifrado de archivo JSON v√°lido                  | Archivo `.enc` creado, contenido cifrado          |
| Descifrado correcto                             | Archivo JSON recuperado igual al original         |
| Validaci√≥n de log cifrado                       | `True` si es v√°lido, `False` si no                |
| Generaci√≥n de clave sin password (random)       | Devuelve clave de 32 bytes                        |
| Generaci√≥n de clave con password/salt           | Devuelve clave reproducible con los mismos datos  |
| Descifrado con clave incorrecta                 | Lanza excepci√≥n o contenido inv√°lido              |
| Manejo de errores de lectura/escritura          | Logging de error y control de excepciones         |

---

## üîß Consideraciones t√©cnicas

- Usar archivos temporales (`tmp_path`) para pruebas
- Comparar el archivo original y el descifrado byte a byte
- Testear ambos algoritmos: AES-GCM y ChaCha20
- Verificar tama√±o de nonce: 12 bytes para AES, 24 para ChaCha20
- Simular fallos con claves corruptas o datos truncados

---

## üìÇ Archivos relacionados

- `log_crypto.py` (m√≥dulo a testear)
- `log_writer.py` (compatible como entrada)

---

¬øPod√©s generar el archivo `test_log_crypto.py` con cobertura completa y buenas pr√°cticas usando `pytest`?
