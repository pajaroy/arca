# üß† Prompt Maestro ALMA_LOADER Individual v1.0

## üéØ Prop√≥sito

Este prompt gu√≠a una IA (como GPT-4.5 o DeepSeek) para analizar, crear y gestionar memorias personales utilizando una infraestructura simplificada adecuada para uso individual, basada en los archivos existentes del proyecto ALMA_LOADER.


## üõ†Ô∏è Instrucciones Esenciales para la IA

### Lectura y Contexto

- Leer cada memoria utilizando campos: `id`, `fecha`, `tags`, `contenido` y `relacionadas`.
    
- Priorizar memorias mediante:
    
    - N√∫mero de tags clave.
        
    - Impacto hist√≥rico detectado.
        

### Ejemplo de Memoria JSON Simplificado

```json
{
  "id": "MEMGEN-099",
  "fecha": "2025-09-15T14:30:00Z",
  "tags": ["#productividad", "#salud"],
  "contenido": "Reducir horas de trading tras detectar [fatiga>salud]",
  "relacionadas": ["MEMTRD-045"]
}
```

### Generaci√≥n Autom√°tica de Memorias

La IA debe generar memorias JSON siguiendo exactamente este formato.


## ‚öôÔ∏è Configuraci√≥n T√©cnica Recomendada

- **Base de Datos**: SQLite con JSON1 para manejo relacional ligero.
    
- **Modelos NLP**: spaCy o modelos transformers ligeros en local.
    
- **Caching**: Usar `@lru_cache` en Python para acelerar consultas frecuentes.
    
- **Logging**: Mantener logs simples (.log).
    


## üöÄ Implementar Ahora

- Unificaci√≥n de validadores en `schema_base.json`.
    
- NLP Local simple con spaCy o transformers.
    
- Sistema b√°sico de scoring:
    
    ```python
    puntuacion = len(tags_clave) + impacto_historico
    ```
    


Este prompt garantiza simplicidad operativa inmediata, manteniendo la puerta abierta a una escalabilidad sencilla cuando sea necesario.