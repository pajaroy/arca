---
module: roadmap_tecnico
type: core
status: in_progress
created: '2025-05-20'
linked_to:
- metodologia_doc_ia_v2.md

---
# üåü ALMA_RESIST ‚Äì Roadmap T√©cnico Integral (Checklist)

Roadmap t√©cnico unificado con prioridad en **chat funcional**, **aprendizaje activo** e **infraestructura antifr√°gil**.  
**Formato:** Checklist modular para seguimiento en Obsidian.  
**Actualizado al:** 2025-05-19

---

## üìå **Fase 1: Desarrollo Inicial (MVP Chat-CLI)**
### Sprint 1 ‚Äì Chat B√°sico + Logs
- [ ] Implementar CLI interactiva con LLM local (`cli.py`).
- [ ] Guardar logs en `.md`/`.json` en `ALMA_RESIST/logs/`.
- [ ] Comandos b√°sicos: `!reset`, `!help`, `!exit`.
- [ ] Pruebas de usabilidad con prompts simples (10+ usuarios beta).
- [ ] **Documentaci√≥n:** Crear `docs/cli_guide.md` (comandos b√°sicos).

### Sprint 2 ‚Äì Persistencia + ALMA_LOADER Inicial
- [ ] Almacenar historial en SQLite cifrado (`user/history.db`).
- [ ] Script ETL diario (`ALMA_LOADER/etl_daily.py`).
- [ ] Comandos: `!memoria [tema]`, `!buscar "[texto]"`.
- [ ] **M√©trica:** Tiempo de respuesta `< 2s` en consultas.

---

## üìå **Fase 2: Infraestructura Segura y Aprendizaje Activo**
### Sprint 3 ‚Äì Autonom√≠a B√°sica
- [ ] Analizar logs para detectar patrones (`alma_auto_eval.py`).
- [ ] Comando `!sugerir` con propuestas de optimizaci√≥n.
- [ ] Registrar aceptaci√≥n/rechazo de sugerencias en `logs/feedback.json`.
- [ ] **M√©trica:** `> 60%` de sugerencias aceptadas.

### Sprint 4 ‚Äì Cifrado y Resiliencia
- [ ] Cifrar logs con ChaCha20 (fallback AES-NI si hay GPU).
- [ ] Validar integridad con SHA3 (`system/check_sha3.sh`).
- [ ] Script de recuperaci√≥n de logs corruptos (`system/recover_logs.py`).
- [ ] **Documentaci√≥n:** Actualizar `docs/security_policy.md`.

### Sprint 5 ‚Äì Monitoreo Predictivo
- [ ] Implementar `alma_monitor.py` (RAM/CPU/temperatura).
- [ ] Alertas: `>80% RAM`, `>75¬∞C`, `swap >20%`.
- [ ] Modo supervivencia (`system/survival_mode.sh`).
- [ ] **M√©trica:** Alertas en `< 5s` tras evento cr√≠tico.

---

## üìå **Fase 3: Optimizaci√≥n y Escalabilidad**
### Sprint 6 ‚Äì Feedback y Optimizaci√≥n
- [ ] Sistema de feedback: `¬øFue √∫til? [S√≠/No]`.
- [ ] Ajustar sugerencias basadas en `logs/feedback.json`.
- [ ] Refinar prompts del LLM (`ALMA_SERVER_LLM/prompts/`).
- [ ] **Documentaci√≥n:** `docs/feedback_analysis.md`.

### Sprint 7 ‚Äì Integraci√≥n GPU/ONNX
- [ ] Soporte para modelos ONNX en GPU (`llm_onnx.py`).
- [ ] Optimizar inferencia con TensorRT (si NVIDIA GPU detectada).
- [ ] **M√©trica:** `>3x` aceleraci√≥n vs CPU.

### Sprint 8 ‚Äì DuckDB y An√°lisis Avanzado
- [ ] Migrar an√°lisis hist√≥ricos a DuckDB (`ALMA_LOADER/duckdb_analytics.py`).
- [ ] Consultas complejas: `!analizar "uso de RAM √∫ltimos 7 d√≠as"`.
- [ ] **Documentaci√≥n:** `docs/duckdb_integration.md`.

### Sprint 9 ‚Äì Pruebas de Resiliencia
- [ ] Simular corrupci√≥n de logs (`tests/corrupt_logs.py`).
- [ ] Pruebas de inyecci√≥n SQL en bases locales.
- [ ] Validar modo supervivencia bajo estr√©s t√©rmico.
- [ ] **M√©trica:** Recuperaci√≥n en `< 30s` tras fallo.

---

## üìä **Seguimiento de Progreso**
| Fase | Tareas Totales | Tareas Completadas | Avance (%) |
|------|----------------|--------------------|------------|
| Fase 1 | 8 | 0 | 0% |
| Fase 2 | 10 | 0 | 0% |
| Fase 3 | 12 | 0 | 0% |

---

## üîó **Archivos Relacionados en Obsidian**
- [[ALMA_RESIST-idea_base]]  
- [[ALMA_RESIST-PROMPT_TECNICO]]  
- [[ALMA_RESIST-Whitepaper]]  

### üìé Anexos


-  [[roadmap_tecnico_detallado.pdf|üßæ PDF ‚Äì Roadmap T√©cnico Detallado (v0.0.1)]]




**‚ú® Copia este contenido en un nuevo archivo .md en Obsidian y usa checkboxes ( [ ] ‚Üí [x] ) para marcar el progreso.**

---

## ‚úÖ Sprint 2.5 ‚Äì FINALIZADO

- Auditor√≠a sem√°ntica completa del sistema
- Normalizaci√≥n de metadatos y nombres
- Generaci√≥n masiva de `README.md`
- Integraci√≥n de scripts automatizados
- Creaci√≥n del pipeline `run_auditoria_automatica.sh`
- Consolidaci√≥n conceptual (`idea_base`, `whitepaper`, `prompt_tecnico`)

> üîú Siguiente etapa: **Sprint 2.6 ‚Äì CLI IA Modular** (pendiente de apertura)

