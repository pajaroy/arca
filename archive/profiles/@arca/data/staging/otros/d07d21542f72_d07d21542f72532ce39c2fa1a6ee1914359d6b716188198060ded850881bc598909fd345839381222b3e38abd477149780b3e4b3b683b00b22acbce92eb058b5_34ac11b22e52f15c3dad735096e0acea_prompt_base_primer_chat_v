
# üì° PROMPT BASE ‚Äì Investigaci√≥n Profunda GPT-4.5 (v0.5)

## üéØ Objetivo General

Desarrollar un roadmap t√©cnico ejecutable y robusto para **ALMA_RESIST**, un sistema IA modular offline con:

- Soberan√≠a tecnol√≥gica total (sin nubes).
- Privacidad radical (logs cifrados, backups offline).
- Resiliencia en entornos de hardware limitado.
- Mantenibilidad individual + IA como copiloto (10hs/d√≠a).


## ‚öôÔ∏è Especificaciones del Entorno

**Requisitos T√©cnicos Base:**
- SO: Linux x86_64 (Debian/Ubuntu)
- RAM: 8GB (soporte low-memory)
- CPU: 4 n√∫cleos
- Python: 3.10.12+ (venv)
- Sin conexi√≥n a internet


## üìÅ Archivos de Referencia

- `ALMA_LIBRE/`
- `idea_base_0.0.9.md`
- `docs/flujo_secuencial.mmd`


### 2. Checklists por M√≥dulo

#### Validaci√≥n Cross-Hardware
```markdown
- [ ] Script `stress_test.py` simula carga por n√∫cleos (2/4/8)
- [ ] Reporte en `docs/benchmarks.md` por configuraci√≥n
- [ ] Verificaci√≥n de tiempo medio de respuesta <3s
```

#### ALMA_LOADER
```markdown
- [ ] Verifica SHA-256 de backups antes de restaurar
- [ ] Restauraci√≥n parcial posible (logs OK, DB fallida)
- [ ] Retenci√≥n m√°xima de 30 d√≠as
- [ ] Eliminaci√≥n segura: `shred -u` + overwrite (3 pasadas)
```

#### Dependencias Offline
```markdown
- [ ] `install_offline.sh` instala todas las dependencias necesarias
- [ ] `update_deps.sh` permite sincronizar desde USB o red local
- [ ] Firma GPG de los paquetes en cache
```


### 4. C√≥digo de Referencia con Fallos Controlados

```python
def cargar_modelo(ruta: str, quant: int) -> bool:
    """Carga modelo GGUF con validaci√≥n y logging."""
    try:
        if not os.path.exists(ruta):
            raise FileNotFoundError("E-201: Archivo no encontrado")
        if quant not in {3, 4, 8}:
            raise ValueError("E-202: Quant inv√°lido")
        # Simular carga con llama.cpp aqu√≠
        return True
    except Exception as e:
        logger.error(f"[E-999] Error en carga de modelo: {e}")
        return False
```


## üß† Pol√≠tica de Datos y Recuperaci√≥n

### Retenci√≥n y Eliminaci√≥n Segura
```markdown
- Logs se mantienen m√°ximo 30 d√≠as
- Eliminaci√≥n:
  - Overwrite: 0x00, 0xFF, aleatorio
  - Comando `shred -u` para logs en sistemas UNIX
```


# üìã Changelog v0.5

- ‚úÖ Checklist detallado para validaci√≥n cross-hardware
- ‚úÖ Scripts de backup y restauraci√≥n con SHA-256 y restauraci√≥n parcial
- ‚úÖ Eliminaci√≥n segura por sobrescritura y `shred -u`
- ‚úÖ `update_deps.sh` para sincronizaci√≥n offline y GPG de paquetes
- ‚úÖ Columnas cuantificables en roadmap (criterios + esfuerzo + prioridad)
- ‚úÖ Reglas para integrar respuestas a preguntas cr√≠ticas en dise√±o
