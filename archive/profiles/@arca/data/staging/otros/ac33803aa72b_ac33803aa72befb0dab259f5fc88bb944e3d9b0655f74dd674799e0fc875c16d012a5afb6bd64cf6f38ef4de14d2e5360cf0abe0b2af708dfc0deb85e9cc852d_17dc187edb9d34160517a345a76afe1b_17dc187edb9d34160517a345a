{
  "raiz_base": {
    "descripcion": "Esta es la estructura base del sistema ALMA_RESIST. Cada agente, bitácora, memoria y archivo sigue un protocolo de trazabilidad y metadatos con el objetivo de garantizar gobernanza, escalabilidad y trazabilidad total del ecosistema.\n",
    "archivos": [
      "index.json",
      "README.md",
      "control_central/",
      "bitacora_viva.yaml",
      "memorias_institucionales.yaml"
    ]
  },
  "agentes": {
    "kael": {
      "directorio": "control_central/agentes/kael/",
      "archivos": [
        {
          "nombre": "README.md",
          "tipo": "documentación",
          "hash": "sha256:pending"
        },
        {
          "nombre": "bitacora_personal_agente.yaml",
          "tipo": "bitácora personal",
          "hash": "sha256:pending"
        },
        {
          "nombre": "memoria_kael.yaml",
          "tipo": "memoria personal",
          "hash": "sha256:pending"
        },
        {
          "nombre": "log/",
          "tipo": "registro"
        }
      ]
    },
    "centralesis": {
      "directorio": "control_central/agentes/centralesis/",
      "archivos": [
        {
          "nombre": "README.md",
          "tipo": "documentación",
          "hash": "sha256:pending"
        },
        {
          "nombre": "bitacora_personal_agente.yaml",
          "tipo": "bitácora personal",
          "hash": "sha256:pending"
        },
        {
          "nombre": "memoria_centralesis.yaml",
          "tipo": "memoria personal",
          "hash": "sha256:pending"
        },
        {
          "nombre": "log/",
          "tipo": "registro"
        }
      ]
    }
  },
  "control_central": {
    "directorio": "control_central/",
    "archivos": [
      {
        "nombre": "README.md",
        "tipo": "documentación global",
        "hash": "sha256:pending"
      },
      {
        "nombre": "raiz_base_agente.yaml",
        "tipo": "plantilla base de agentes",
        "hash": "sha256:pending"
      },
      {
        "nombre": "protocolo_alta_agentes.md",
        "tipo": "protocolo institucional",
        "hash": "sha256:pending"
      }
    ]
  },
  "bitacora": {
    "directorio": "bitacora/",
    "archivos": [
      {
        "nombre": "bitacora_viva.yaml",
        "tipo": "bitácora global",
        "hash": "sha256:pending"
      }
    ]
  },
  "memorias": {
    "institucionales": {
      "archivo": "memorias_institucionales.yaml",
      "tipo": "readonly",
      "sincronizacion": "unidireccional",
      "hash": "sha256:pending"
    },
    "kael": {
      "archivo": "memorias_kael.yaml",
      "tipo": "editable",
      "sincronizacion": "bidireccional",
      "hash": "sha256:pending"
    }
  },
  "index": {
    "archivo": "index.json",
    "descripcion": "Este archivo mantiene los metadatos y la trazabilidad de cada archivo y agente en el sistema ALMA_RESIST.  La IA y los agentes usarán este índice para navegar por el sistema y gestionar su contenido.\n",
    "estructura": [
      "agentes",
      "memorias",
      "bitacoras",
      "control_central",
      "sincronizacion"
    ]
  },
  "protocolo_carga_indice": {
    "descripcion": "El índice debe actualizarse automáticamente cada vez que se cargue o modifique un archivo o memoria.  Esto incluirá la generación de hashes de archivos, actualización de fechas y autoría.\n",
    "flujo": [
      "Cada archivo que se crea/modifica genera su hash (SHA-256).",
      "Se actualiza el índice con el hash y metadatos del archivo.",
      "Se registra el timestamp y autor de la modificación en el índice.",
      "Cada vez que un nuevo agente o archivo sea introducido, el índice se actualiza automáticamente."
    ]
  },
  "script_generacion_hash": {
    "descripcion": "Script que calcula automáticamente los hashes de los archivos al crearse o modificarse.  Se debe ejecutar en cada modificación para asegurar que los hashes y metadatos estén siempre actualizados.\n",
    "ejemplo_comando": "python3 /path/to/script/generar_hash.py --file \"/path/to/file\" --output \"/path/to/index.json\"\n"
  },
  "metadatos": {
    "descripcion": "Cada archivo debe tener los siguientes metadatos para garantizar trazabilidad: - hash - fecha de última modificación - autor de la modificación - referencia al índice de archivo\n",
    "ejemplo_metadatos": [
      {
        "nombre": "README.md",
        "hash": "sha256:pending",
        "fecha_modificacion": "2025-06-08T14:00:00Z",
        "autor": "kael",
        "referencia_indice": "index.json"
      }
    ]
  }
}