---
module: versiones/v0_0_0_4_sprint_2_5_auditoria/apendice_complementario_sprint_2_5
type: core
status: in_progress
created: '2025-05-26'
linked_to:
- metodologia_doc_ia_v2.md

---
# üß© Ap√©ndice Complementario ‚Äì Sprint 2.5 (Tareas Pendientes Detectadas por Auditor√≠a)

Este ap√©ndice detalla acciones adicionales no contempladas expl√≠citamente en el checklist original, pero detectadas durante la auditor√≠a del Sprint 2.5. Estas tareas no duplican elementos previos, sino que ampl√≠an la profundidad de la verificaci√≥n con mejoras necesarias para la consolidaci√≥n estructural de ALMA_RESIST.

---

## üîÅ Tareas complementarias sugeridas

1. **Normalizaci√≥n profunda del campo `module` en YAML**  
   Detectar y corregir rutas incompletas o inconsistentes dentro del campo `module` del frontmatter. Muchos archivos s√≥lo declaran un subnivel (ej. `estructura_doc/plantilla_documento`) sin incluir el m√≥dulo ra√≠z (`arquitectura/estructura_doc/...`).

2. **Revisi√≥n cruzada de campos `linked_to`**  
   Varios archivos YAML no incluyen el campo `linked_to`, o hacen referencia a rutas obsoletas. Deber√≠a implementarse validaci√≥n sem√°ntica cruzada para alinear cada documento con su versi√≥n, bit√°cora o checklist correspondiente.

3. **Detecci√≥n de archivos hu√©rfanos fuera de m√≥dulos**  
   Se encontraron archivos en la ra√≠z de `docs/` y en `ideas/` que no encajan en ning√∫n m√≥dulo ni est√°n registrados en `scripts_index.md` o README. Deber√≠an reubicarse o archivarse si no cumplen con funciones activas.

4. **Autoetiquetado de documentos hist√≥ricos**  
   Proponer una pol√≠tica para marcar autom√°ticamente los documentos obsoletos o legacies con `status: archived` o similar, y separarlos del flujo operativo actual. Podr√≠a automatizarse en el futuro con un script de `curado_archivos.py`.

5. **Validaci√≥n de consistencia sem√°ntica entre YAML y contenido real**  
   Varios documentos declaran en su frontmatter `type: core` pero no contienen contenido central, sino propuestas, pruebas o plantillas. Se recomienda implementar an√°lisis IA para detectar esta inconsistencia y sugerir reclasificaci√≥n.

6. **Control de duplicidad de scripts entre `scripts/` y `core/`**  
   Algunos scripts antiguos a√∫n est√°n presentes en `core/` o `commands/` pese a haber sido migrados a `docs/utilidades/scripts/`. Se recomienda forzar verificaci√≥n de duplicados por hash y eliminar los residuales.

7. **Versi√≥n snapshot Sprint 2.5 faltante en `docs/versiones/`**  
   El snapshot correspondiente a este sprint a√∫n no se encuentra registrado formalmente. Se sugiere generar la carpeta `v0.0.0.5_snapshot_sprint_2.5` y documentar su estructura resultante.

---

## ‚úÖ Siguientes pasos sugeridos

- Implementar un script `detect_inconsistencias_yaml.py` para validar campos `module`, `type`, `status` versus su contenido y ubicaci√≥n real.
- Establecer convenci√≥n para rutas completas en `module`, incluyendo prefijo de m√≥dulo ra√≠z.
- Generar y versionar snapshot de cierre del sprint con todos los cambios aplicados.
- Crear script de curadur√≠a autom√°tica de documentos obsoletos (`status: archived`).

---

Este ap√©ndice complementa el checklist de Sprint 2.5 como insumo t√©cnico para el Sprint 2.6.
