---
module: prompts/solicitud_log_crypto
type: core
status: in_progress
created: '2025-05-17'
linked_to:
- metodologia_doc_ia_v2.md

---
# 🧠 Solicitud de Módulo: `log_crypto.py` – ALMA_RESIST

## 🎯 Objetivo
Implementar un módulo Python llamado `log_crypto.py` dentro del sistema ALMA_RESIST. Este módulo debe poder:

1. Cifrar archivos `.log` con AES-256 si la CPU es x86 y soporta AES-NI.
2. Usar ChaCha20 como alternativa en ARM o CPUs sin AES-NI.
3. Validar automáticamente qué algoritmo usar en función del entorno.
4. Aceptar claves personalizadas o generarlas de forma segura si no se proveen.
5. Guardar archivo cifrado como `.enc` y poder descifrarlo de forma segura.
6. Operar 100% offline y desde terminal.

---

## 📦 Requerimientos técnicos

- Sin conexión a internet
- Sin librerías pesadas (no usar `cryptography` si requiere wheels externos)
- Preferencia: `pycryptodome` o `cryptography` instalable vía pip offline
- Compatible con Python 3.10+
- Docstrings estilo Google para todas las funciones
- Compatible con sistemas de archivos seguros
- Validación de errores y fallback automático

---

## 🧪 Entradas esperadas

```python
encrypt_log(input_path="logs/alma_2025-05-17.log", output_path="logs/alma_2025-05-17.enc", key=b"clave_segura")
decrypt_log(input_path="logs/alma_2025-05-17.enc", output_path="logs/alma_2025-05-17.log", key=b"clave_segura")
```

---

## ⚙️ Consideraciones

- El archivo `.log` puede tener 1000+ líneas en formato JSONL.
- Se debe mantener la estructura del archivo intacta al descifrar.
- AES debe usar modo CBC o GCM.
- ChaCha20 puede ser de `pycryptodome` o `cryptography`.
- Si no se detecta AES-NI, usar fallback automáticamente.

---

## 📘 Archivos relacionados

- `core/log_writer.py` – Genera los logs
- `tests/test_log_writer.py` – Verifica escritura funcional
- `docs/changelog.md`, `docs/lecciones_aprendidas.md`

---

## 📄 Salida esperada

- Código completo de `log_crypto.py`
- Ejemplo de uso
- Manejo de errores y excepciones
- Detección de arquitectura con fallback automático

---

📦 Este módulo es crítico para garantizar privacidad radical en ALMA_RESIST.
