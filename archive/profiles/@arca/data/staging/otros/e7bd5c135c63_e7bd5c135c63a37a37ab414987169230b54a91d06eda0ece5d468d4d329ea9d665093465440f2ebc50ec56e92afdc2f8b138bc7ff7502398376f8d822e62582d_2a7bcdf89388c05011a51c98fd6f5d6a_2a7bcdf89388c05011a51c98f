# üß† Prompt DeepSeek ‚Äì Script Universal Fix Metadata v3 para ALMA_RESIST


### **Novedades obligatorias v3**

1. **Log de archivos saltados y motivo**:  
   - Todo archivo excluido, saltado o no soportado debe quedar registrado en el log con acci√≥n `skipped` y motivo (`excluded by pattern`, `unsupported extension`, etc.).

2. **Exclusi√≥n autom√°tica de logs**:  
   - El script nunca debe procesar archivos con extensi√≥n `.log` ni el propio archivo de log generado por el script.

3. **Campo autor robusto**:  
   - Si falla `os.getlogin()`, usar `'desconocido'` como valor por defecto para el campo `autor` en metadata.

4. **Referencia al prompt/IDEA**:  
   - Incluir en cada registro de log un campo tipo `"prompt_ref": "IDEA_2025-06-06_01"` para trazabilidad.

5. **Rutas de backup en el resumen final**:  
   - Al terminar, mostrar cu√°ntos archivos fueron respaldados y la ruta de los backups realizados.

6. **Modo dry-run y resumen final mejorado**:  
   - En modo diagn√≥stico, mostrar archivos que habr√≠an sido modificados/saltados.  
   - Al finalizar, resumen total: modificados, saltados, errores, backups hechos, dry-run vs real.

7. **Configuraci√≥n clara de exclusi√≥n**:  
   - Seguir soportando exclusiones v√≠a lista interna, archivo `.fix_metadata_ignore`, y par√°metros CLI.

8. **Nunca auto-modificarse ni da√±ar logs o sistema**:  
   - Proteger la carpeta/logs del propio script por defecto.


## **Referencia oficial:**  
[IDEA_2025-06-06_01] ‚Äì ALMA_RESIST | Santiago Calvo | Centralesis v2.3


## Ejemplo de log para archivo saltado:

```json
{
  "file": "core/notebooks/2025-06-05_memorias_base_generales.md",
  "timestamp": "2025-06-11T11:22:33",
  "action": "skipped",
  "reason": "excluded by pattern",
  "prompt_ref": "IDEA_2025-06-06_01"
}
```


üìù Ap√©ndice: Changelog v3.1
Mejoras Principales

    Soporte Multi-formato de Metadata

        Adici√≥n de soporte para bloques TOML (+++ ... +++)

        Detecci√≥n de metadatos en comentarios especiales (# METADATA-START ... # METADATA-END)

        Serializaci√≥n inteligente seg√∫n el formato detectado

    Detecci√≥n de Encoding Mejorada

        Muestreo adaptativo (10% del archivo o 50KB m√°ximo)

        Fallback robusto a UTF-8 con manejo de errores

        Soporte para detecci√≥n autom√°tica con chardet

    Validaci√≥n Avanzada de Campos

        Validaci√≥n de valores permitidos para status

        Verificaci√≥n de formato ISO para fechas

        Normalizaci√≥n autom√°tica de listas (tags, linked_to)

    Generaci√≥n de IDs M√°s Robusta

        Uso de fragmento de hash de contenido para evitar colisiones

        Formato: <TIPO>_<FECHA>_<6_D√çGITOS_HASH>

        Conservaci√≥n de IDs existentes v√°lidos

    Detecci√≥n de Tipo de Archivo Mejorada

        An√°lisis combinado de nombre y contenido

        Soporte para tipos espec√≠ficos (script_principal)

        Reconocimiento de t√©rminos en espa√±ol (bit√°cora, decisi√≥n)

    Optimizaciones de Rendimiento

        Lectura adaptativa de archivos (solo muestras para detecci√≥n)

        Procesamiento en paralelo potencial

        Cach√© de operaciones costosas

    Manejo de Errores Mejorado

        Logging estructurado con diferentes niveles

        Excepciones espec√≠ficas para cada tipo de error

        Informaci√≥n detallada en modo --verbose

    Experiencia de Usuario Mejorada

        Banner de inicio con versi√≥n

        S√≠mbolos Unicode para estados

        Resumen detallado con estad√≠sticas

        Mensajes de error m√°s comprensibles

    Soporte para TOML

        Requiere instalaci√≥n opcional: pip install toml

        Serializaci√≥n/deserializaci√≥n autom√°tica

        Compatible con sistemas que usan TOML para configuraci√≥n

    Manejo de Rutas Multiplataforma

        Normalizaci√≥n de rutas para Windows/Unix

        Manejo correcto de separadores de ruta

        Soporte para patrones de exclusi√≥n multiplataforma

Requisitos de Instalaci√≥n