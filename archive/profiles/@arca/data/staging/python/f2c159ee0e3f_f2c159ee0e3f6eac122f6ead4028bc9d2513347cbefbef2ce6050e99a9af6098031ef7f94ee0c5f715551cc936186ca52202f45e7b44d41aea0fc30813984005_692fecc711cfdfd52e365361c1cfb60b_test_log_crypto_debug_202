#!/usr/bin/env python3

import os
from core.log_crypto import encrypt_log, decrypt_log, generar_clave

def debug_print(label, data):
    print(f"{label}: {len(data)} bytes | {data[:32]}...")

def main():
    print("üß™ Test DEBUG ‚Äì log_crypto.py")

    log_original = "logs/alma_debug_test.log"
    log_cifrado = "logs/alma_debug_test.enc"
    log_descifrado = "logs/alma_debug_test.dec"
    clave_path = "clave_debug.bin"

    try:
        # Crear contenido de prueba
        os.makedirs("logs", exist_ok=True)
        with open(log_original, "w", encoding="utf-8") as f:
            f.write('{"timestamp": "2025-05-17T08:25:13Z", "type": "INFO", "message": "Debug"}\n')

        # Generar clave y guardarla
        clave = generar_clave()
        with open(clave_path, "wb") as f:
            f.write(clave)

        debug_print("Clave generada", clave)

        # Cifrar
        encrypt_log(log_original, log_cifrado, clave)
        print("üîê Log cifrado correctamente.")
        with open(log_cifrado, "rb") as f:
            cifrado = f.read()
        debug_print("Archivo cifrado", cifrado)

        # Recargar clave y descifrar
        with open(clave_path, "rb") as f:
            clave_leida = f.read()

        decrypt_log(log_cifrado, log_descifrado, clave_leida)
        print("üîì Log descifrado correctamente.")

        # Verificaci√≥n
        with open(log_original, "r", encoding="utf-8") as f1, open(log_descifrado, "r", encoding="utf-8") as f2:
            original = f1.read()
            descifrado = f2.read()
            if original == descifrado:
                print("‚úÖ Test PASADO: El archivo descifrado es igual al original.")
            else:
                print("‚ùå Test FALLADO: El archivo descifrado difiere del original.")
                print("---- ORIGINAL ----")
                print(original)
                print("---- DESCIFRADO ----")
                print(descifrado)

    except Exception as e:
        print(f"‚ùå Excepci√≥n durante el test DEBUG: {e}")

if __name__ == "__main__":
    main()
